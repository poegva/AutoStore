{"version":3,"sources":["containers/CartButton.js","components/AppMenu.js","components/TextBlock.js","redux/actions/OrderActions.js","components/ShopItemCard.js","components/ShopItemGrid.js","components/ItemsLoading.js","containers/Shop.js","components/CartItemCard.js","containers/CartContent.js","components/form/PhoneField.js","components/form/GenericForm.js","components/form/BasicField.js","containers/ContactForm.js","components/form/AddressField.js","components/form/DeliveryOptionField.js","containers/DeliveryForm.js","containers/CartDialog.js","containers/Order.js","containers/App.js","serviceWorker.js","redux/reducers/OrderReducer.js","redux/reducers/index.js","redux/configureStore.js","index.js"],"names":["connect","store","cartCount","Object","values","order","cart","reduce","acc","current","quantity","dispatch","props","theme","useTheme","matches","useMediaQuery","breakpoints","down","content","Badge","badgeContent","color","onClick","setCartOpen","style","floating","Fab","position","alignSelf","right","top","backgroundColor","useStyles","makeStyles","appLogo","height","toolbarLink","padding","spacing","flexShrink","fontSize","fontFamily","AppMenu","classes","React","useState","open","setOpen","AppBar","boxShadow","Container","Toolbar","justifyContent","src","image","className","alt","Box","sections","map","section","Link","key","title","href","url","component","RouterLink","to","Drawer","onClose","display","flexDirection","TextBlock","Typography","variant","gutterBottom","align","subtitle","addItem","item","type","payload","media","buyButton","itemCard","ShopItemCard","up","CardContent","flexGrow","name","bgcolor","Button","price","paddingBottom","paragraph","paddingTop","Card","flexFlow","CardMedia","itemGrid","ItemGrid","maxWidth","Grid","container","items","xs","sm","md","id","ItemsLoading","error","errorText","CircularProgress","loadingText","setItems","setError","useEffect","fetch","window","location","hostname","then","res","json","result","marginTop","marginBottom","itemContent","width","itemImage","quantityFlex","ItemQuantity","IconButton","size","removeItem","paddingLeft","paddingRight","CartItemCard","deleteItem","cartItem","TextMaskCustom","inputRef","other","ref","inputElement","mask","placeholderChar","PhoneField","TextField","label","value","onChange","event","resetError","setValue","target","required","helperText","InputProps","inputComponent","dialogContainer","formContainer","formInput","submitButton","backButton","FormButton","submit","children","GenericForm","childrenMap","Array","isArray","state","fromEntries","c","valid","forEach","child","validate","setState","Children","this","cloneElement","returnBack","Component","setName","setEmail","email","setPhone","phone","submitContacts","contacts","test","String","toLowerCase","AddressField","inputValue","setInputValue","options","setOptions","getOptions","useMemo","throttle","callback","active","console","log","results","newOptions","Autocomplete","getOptionLabel","option","address","filterOptions","x","noOptionsText","autoComplete","includeInputInList","newValue","onInputChange","newInputValue","renderInput","params","OptionCard","FormControlLabel","control","Radio","cost","delivery","DeliveryOptionField","FormControl","RadioGroup","aria-label","FormHelperText","returnToContacts","setAddress","addressComponents","some","kind","r","setDeliverySelected","selected","submitOrder","orderData","redirect","method","body","JSON","stringify","headers","history","useHistory","delivery_option","convertItemToData","push","orderStep","step","keys","length","dialogContent","Dialog","aria-labelledby","cartOpen","fullWidth","fullScreen","Payment","loading","setLoading","status","payment_token","script","document","createElement","async","onload","YandexCheckout","confirmation_token","return_url","embedded_3ds","error_callback","setTimeout","loadOrder","token","render","appendChild","minHeight","OrderDetails","OrderContent","alignItems","OrderInfo","stateToText","lastOrderId","reloaded","setReloaded","orders","interval","setInterval","clearInterval","subContent","Fragment","disableGutters","strict","exact","path","Boolean","match","initialState","rootReducer","combineReducers","action","newCart","persistConfig","storage","persistedReducer","persistReducer","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a1b9a681.chunk.js","sourcesContent":["import React from \"react\";\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport Badge from \"@material-ui/core/Badge\";\nimport {connect} from \"react-redux\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Fab from \"@material-ui/core/Fab\";\n\nfunction CartButton(props) {\n    const theme = useTheme();\n    const matches = !useMediaQuery(theme.breakpoints.down('sm'));\n\n    if (props.cartCount === 0) {\n        return null;\n    }\n\n    const content = (\n        <Badge badgeContent={props.cartCount} color=\"secondary\" onClick={() => {props.setCartOpen(true)}}>\n            <ShoppingCartIcon style={{color: \"black\"}} />\n        </Badge>\n    )\n\n    if (props.floating) {\n        if (matches) {\n            return (\n                <Fab\n                    style={{position: \"fixed\", alignSelf: \"end\", right: 30, top: 130, backgroundColor: \"white\"}}\n                    onClick={() => props.setCartOpen(true)}\n                >\n                    {content}\n                </Fab>\n            );\n        } else {\n            return null;\n        }\n    } else {\n        return content;\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        cartCount: Object.values(store.order.cart).reduce((acc, current) => acc + current.quantity, 0)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CartButton);\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Link from \"@material-ui/core/Link\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport CartButton from \"../containers/CartButton\";\n\nconst useStyles = makeStyles((theme) => ({\n    appLogo: {\n        [theme.breakpoints.down('sm')]: {\n            height: \"60px\"\n        }\n    },\n    toolbarLink: {\n        padding: theme.spacing(1),\n        flexShrink: 0,\n        fontSize: 'large',\n        color: 'black',\n        fontFamily: 'roboto',\n    }\n}));\n\nexport default function AppMenu(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = !useMediaQuery(theme.breakpoints.down('sm'));\n    const [open, setOpen] = React.useState(false);\n\n    if (matches) {\n        return (\n                <AppBar position=\"static\" style={{backgroundColor: \"white\", boxShadow: 'none'}} >\n                    <Container>\n                    <Toolbar style={{justifyContent: matches ? \"flex-start\" : \"space-between\"}}>\n                        <img src={props.image} className={classes.appLogo} alt=\"\"/>\n                        <Box>\n                            {props.sections.map((section) => (\n                                <Link\n                                    key={section.title}\n                                    href={section.url}\n                                    className={classes.toolbarLink}\n                                    component={RouterLink}\n                                    to={section.url}\n                                >\n                                    {section.title}\n                                </Link>\n                            ))}\n                        </Box>\n                    </Toolbar>\n                    </Container>\n                </AppBar>\n        );\n    }\n\n    return (\n        <AppBar position=\"sticky\" style={{backgroundColor: \"white\", boxShadow: 'none'}} >\n            <Toolbar style={{justifyContent: \"space-between\"}}>\n                <img src={props.image} className={classes.appLogo} alt=\"\"/>\n                    <CartButton setCartOpen={props.setCartOpen}/>\n                    <MenuIcon style={{color: \"black\"}} fontSize=\"large\" onClick={() => setOpen(true)}/>\n                <Drawer open={open} onClose={() => setOpen(false)}>\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        {props.sections.map((section) => (\n                            <Link\n                                key={section.title}\n                                href={section.url}\n                                className={classes.toolbarLink}\n                                component={RouterLink}\n                                to={section.url}\n                                onClick={() => setOpen(false)}\n                            >\n                                {section.title}\n                            </Link>\n                        ))}\n                    </Box>\n                </Drawer>\n            </Toolbar>\n        </AppBar>\n    )\n}","import Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function TextBlock(props) {\n    return (\n        <Container>\n            <Typography variant=\"h2\" gutterBottom align='center' component=\"h2\">\n                {props.title}\n            </Typography>\n\n            <Typography variant=\"h4\" gutterBottom align='center'>\n                {props.subtitle}\n            </Typography>\n        </Container>\n    )\n}","export const ADD_ITEM = 'ADD_ITEM'\nexport const REMOVE_ITEM = 'REMOVE_ITEM'\nexport const SET_ITEM = 'SET_ITEM'\nexport const DELETE_ITEM = 'DELETE_ITEM'\nexport const CLEAR_CART = 'CLEAR_CART'\nexport const SET_NAME = 'SET_NAME'\nexport const SET_PHONE = 'SET_PHONE'\nexport const SET_EMAIL = 'SET_EMAIL'\nexport const SUBMIT_CONTACTS = 'SUBMIT_CONTACTS'\nexport const RETURN_TO_CONTACTS = 'RETURN_TO_CONTACTS'\nexport const SET_ADDRESS = 'SET_ADDRESS'\nexport const SET_OPTIONS = 'SET_OPTIONS'\nexport const SET_DELIVERY_SELECTED = 'SET_DELIVERY_SELECTED'\nexport const SUBMIT_ORDER = 'SUBMIT_ORDER'\nexport const ORDER_SUBMITTED = 'ORDER_SUBMITTED'\nexport const CLEAR_ORDER = 'CLEAR_ORDER'\nexport const ORDER_LOADED = 'ORDER_LOADED'\n\n\nexport function addItem(item) {\n    return dispatch => {\n        dispatch({\n            type: ADD_ITEM,\n            payload: item,\n        });\n    };\n}\n\nexport function removeItem(item) {\n    return dispatch => {\n        dispatch({\n            type: REMOVE_ITEM,\n            payload: item,\n        });\n    };\n}\n\nexport function deleteItem(item) {\n    return dispatch => {\n        dispatch({\n            type: DELETE_ITEM,\n            payload: item,\n        });\n    };\n}\n\n/*export function setItem(item, quantity) {\n    return dispatch => {\n        dispatch({\n            type: ADD_ITEM,\n            payload: {\n                item: item,\n                quantity: quantity,\n            },\n        });\n    };\n}*/\n\nexport function clearCart() {\n    return dispatch => {\n        dispatch({\n            type: CLEAR_CART,\n        });\n    };\n}\n\nexport function setName(name) {\n    return dispatch => {\n        dispatch({\n            type: SET_NAME,\n            payload: name,\n        });\n    };\n}\n\nexport function setPhone(phone) {\n    return dispatch => {\n        dispatch({\n            type: SET_PHONE,\n            payload: phone,\n        });\n    };\n}\n\nexport function setEmail(email) {\n    return dispatch => {\n        dispatch({\n            type: SET_EMAIL,\n            payload: email,\n        });\n    };\n}\n\nexport function submitContacts() {\n    return dispatch => {\n        dispatch({\n            type: SUBMIT_CONTACTS,\n        });\n    };\n}\n\nexport function returnToContacts() {\n    return dispatch => {\n        dispatch({\n            type: RETURN_TO_CONTACTS,\n        });\n    };\n}\n\nexport function setAddress(address) {\n    return dispatch => {\n        dispatch({\n            type: SET_ADDRESS,\n            payload: address\n        });\n\n        if (address && address.addressComponents.some(c => c.kind === \"HOUSE\")) {\n            fetch(`http://${window.location.hostname}/api/delivery/options/?value=${1000}&address=${address.address}`)\n                .then(r => r.json())\n                .then(result => {\n                    dispatch({\n                        type: SET_OPTIONS,\n                        payload: result\n                    });\n                });\n        } else {\n            dispatch({\n                type: SET_OPTIONS,\n                payload: null\n            })\n        }\n    }\n}\n\nexport function setDeliverySelected(selected) {\n    return dispatch => {\n        dispatch({\n            type: SET_DELIVERY_SELECTED,\n            payload: selected\n        });\n    };\n}\n\nexport function submitOrder(orderData, redirect) {\n    return dispatch => {\n        dispatch({\n            type: SUBMIT_ORDER,\n        });\n\n        fetch(`http://${window.location.hostname}/api/orders/`, {\n            method: 'post',\n            body: JSON.stringify(orderData),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(result => result.json())\n            .then(result => {\n                console.log(\"Res\")\n                console.log(result)\n                dispatch({\n                    type: ORDER_SUBMITTED,\n                    payload: result\n                });\n                redirect();\n            });\n    };\n}\n\nexport function loadOrder(id, token) {\n    return dispatch => {\n        console.log(\"Fetch\");\n        fetch(`http://${window.location.hostname}/api/orders/${id}/?token=${token}`)\n            .then(result => result.json())\n            .then(result => {\n                dispatch({\n                    type: ORDER_LOADED,\n                    payload: result\n                })\n            })\n    }\n}\n\nexport function clearOrder() {\n    return dispatch => {\n        dispatch({\n            type: CLEAR_ORDER,\n        });\n    };\n}","import Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\nconst useStyles = makeStyles((theme) => ({\n    media: {\n        height: 350,\n        [theme.breakpoints.down('sm')]: {\n            height: \"150px\"\n        }\n    },\n    buyButton: {\n        backgroundColor: \"black\",\n        color: \"white\",\n        '&:hover': {\n            backgroundColor: \"gray\",\n        }\n    },\n    itemCard: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nexport default function ShopItemCard(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n\n    let content = null\n\n    if (matches) {\n        content = (\n            <CardContent style={{flexGrow: \"1\"}}>\n                <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" height=\"100%\">\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\" align='center'>\n                        {props.item.name}\n                    </Typography>\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\" bgcolor=\"background.paper\">\n                        <Button className={classes.buyButton} onClick={props.addItem}>\n                            Купить\n                        </Button>\n                        <Typography gutterBottom variant=\"h6\" component=\"h6\" align='center'>\n                            {props.item.price} ₽\n                        </Typography>\n                    </Box>\n                </Box>\n            </CardContent>\n        )\n    } else {\n        content = (\n            <CardContent style={{paddingBottom: 0, flexGrow: \"1\"}}>\n                <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" height=\"100%\">\n                    <Typography gutterBottom variant=\"body2\" component=\"h2\" align='center' paragraph>\n                        {props.item.name}\n                    </Typography>\n                    <Box>\n                        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\" bgcolor=\"background.paper\">\n                            <Button className={classes.buyButton} onClick={props.addItem}>\n                                Купить\n                            </Button>\n                        </Box>\n                        <Typography gutterBottom variant=\"body1\" component=\"h6\" align='center' style={{paddingTop: 5}}>\n                            {props.item.price} ₽\n                        </Typography>\n                    </Box>\n                </Box>\n            </CardContent>\n        )\n    }\n\n    return (\n        <Card style={{height: \"100%\", flexFlow: \"column\", display: \"flex\"}}>\n            <CardMedia\n                image={props.item.image}\n                title={props.item.name}\n                className={classes.media}\n            />\n            {content}\n        </Card>\n    )\n\n\n}","import Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport ShopItemCard from \"./ShopItemCard\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    itemGrid: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(8),\n    }\n}));\n\nexport default function ItemGrid(props) {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.itemGrid}>\n            <Grid container spacing={2} >\n                {props.items.map(item => (\n                    <Grid item xs={6} sm={4} md={3} key={item.id} className={classes.itemCard}>\n                        <ShopItemCard item={item} addItem={() => props.addItem(item)}/>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    )\n}","import Box from \"@material-ui/core/Box\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nexport default function ItemsLoading(props) {\n    if (props.error) {\n        return (\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" style={{paddingTop: 20}}>\n                <ErrorIcon color=\"secondary\" fontSize=\"large\" style={{ alignSelf: \"center\" }}/>\n                <Typography align=\"center\" component=\"h5\" variant={props.variant ?? \"h5\"}>\n                    {props.errorText ?? \"Ошибка загрузки\"}\n                </Typography>\n            </Box>\n        );\n    } else {\n        return (\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" style={{paddingTop: 20}}>\n                <CircularProgress style={{alignSelf: \"center\"}}/>\n                <Typography align=\"center\" component=\"h5\" variant={props.variant ?? \"h5\"}>\n                    {props.loadingText ?? \"Загрузка...\"}\n                </Typography>\n            </Box>\n        );\n    }\n}","import TextBlock from \"../components/TextBlock\";\nimport Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {addItem} from \"../redux/actions/OrderActions\";\nimport ShopItemGrid from \"../components/ShopItemGrid\";\nimport ItemsLoading from \"../components/ItemsLoading\";\n\n\nfunction Shop(props) {\n    const [items, setItems] = React.useState(null);\n    const [error, setError] = React.useState(false);\n\n    React.useEffect(() => {\n        if (!items) {\n            fetch(`http://${window.location.hostname}/api/items/`)\n                .then(res => res.json())\n                .then(\n                    (result) => setItems(result),\n                    (error) => setError(true)\n                )\n        }\n    }, [items]);\n\n    return (\n        <Container style={{paddingTop: 20}} >\n            <TextBlock title=\"HQD Cuvie\" subtitle=\"Успей попробовать все вкусы!\" />\n            {items ?\n                <ShopItemGrid items={items} addItem={props.addItem} /> :\n                <ItemsLoading error={error} errorText=\"Что-то пошло не так\" loadingText=\"Загрузка...\" />}\n        </Container>\n    )\n}\n\nconst mapStateToProps = store => {\n    return {};\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addItem: item => dispatch(addItem(item))\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Shop);","import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n    itemCard: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'flex-start'\n    },\n    itemContent: {\n        width: '100%',\n    },\n    itemImage: {\n        width: '100px',\n    },\n    quantityFlex: {\n        display: 'flex'\n    },\n}));\n\nfunction ItemQuantity(props) {\n    if (props.cart) {\n        return (\n            <Box display=\"flex\">\n                <IconButton size=\"small\" onClick={props.removeItem}>\n                    <RemoveIcon />\n                </IconButton>\n                <Typography\n                    component=\"h6\"\n                    variant=\"body1\"\n                    style={{paddingLeft: 7, paddingRight: 7, paddingTop: 5}}\n                >\n                    {props.quantity}\n                </Typography>\n                <IconButton size=\"small\" onClick={props.addItem}>\n                    <AddIcon />\n                </IconButton>\n            </Box>\n        );\n    } else {\n        return (\n            <Box display=\"flex\">\n                <Typography\n                    component=\"h6\"\n                    variant=\"body1\"\n                    style={{paddingTop: 5}}\n                >\n                    Количество: {props.quantity}\n                </Typography>\n            </Box>\n        )\n    }\n}\n\nexport default function CartItemCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.itemCard}>\n            <CardMedia\n                className={classes.itemImage}\n                image={props.item.image}\n                title={props.item.name}\n            />\n            <CardContent className={classes.itemContent} style={{padding: 16}}>\n                <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n                    <Typography component=\"h6\" variant=\"h6\">{props.item.name}</Typography>\n                    {props.cart ? (\n                    <IconButton size=\"small\" onClick={props.deleteItem}>\n                        <CloseIcon />\n                    </IconButton>) : null}\n                </Box>\n                <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n                    <ItemQuantity\n                        quantity={props.quantity}\n                        cart={props.cart}\n                        removeItem={props.removeItem}\n                        addItem={props.addItem}\n                    />\n                    <Typography\n                        component=\"h6\"\n                        variant=\"body1\"\n                        style={{paddingTop: 5}}\n                        align=\"center\"\n                    >\n                        {props.item.price * props.quantity}\n                    </Typography>\n                </Box>\n            </CardContent>\n        </Card>\n    )\n}\n","import Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport CartItemCard from \"../components/CartItemCard\";\nimport Box from \"@material-ui/core/Box\";\nimport {addItem, deleteItem, removeItem, setName} from \"../redux/actions/OrderActions\";\n\nfunction CartContent(props) {\n    return (\n        <Container style={{paddingTop: 20, paddingBottom: 40}}>\n            <Typography component=\"h5\" variant=\"h5\" align=\"center\" style={{paddingBottom: 30}}>\n                Корзина\n            </Typography>\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            {Object.values(props.cart).map(cartItem => (\n                <CartItemCard\n                    item={cartItem.item}\n                    quantity={cartItem.quantity}\n                    key={cartItem.item.id}\n                    cart\n                    addItem={() => props.addItem(cartItem.item)}\n                    removeItem={() => props.removeItem(cartItem.item)}\n                    deleteItem={() => props.deleteItem(cartItem.item)}\n                />\n            ))}\n            </Box>\n        </Container>\n    );\n}\n\nconst mapStateToProps = store => {\n    return {\n        cart: store.order.cart\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addItem: (item) => dispatch(addItem(item)),\n        removeItem: (item) => dispatch(removeItem(item)),\n        deleteItem: (item) => dispatch(deleteItem(item)),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CartContent);","import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={['+', '7', ' ', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n        />\n    );\n}\n\nexport default function PhoneField(props) {\n    return (\n        <TextField\n            label={props.label}\n            value={props.value ?? \"\"}\n            onChange={(event) => {\n                props.resetError();\n                props.setValue(event.target.value);\n            }}\n            name={props.name}\n            id={props.id}\n            variant=\"outlined\"\n            required={props.required}\n            className={props.className}\n            error={props.error}\n            helperText={props.helperText ?? \"\"}\n            style={{paddingBottom: 20}}\n            InputProps={{\n                inputComponent: TextMaskCustom,\n            }}\n        />\n    );\n}","import Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    dialogContainer: {\n        paddingBottom: theme.spacing(4),\n    },\n    formContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    formInput: {\n        paddingBottom: theme.spacing(4),\n    },\n    submitButton: {\n        backgroundColor: \"black\",\n        color: \"white\",\n        '&:hover': {\n            backgroundColor: \"gray\",\n        }\n    },\n    backButton: {\n\n    }\n}));\n\nfunction FormButton(props) {\n    const classes = useStyles();\n\n    return (\n        <Button onClick={props.onClick} className={props.submit ? classes.submitButton : classes.backButton}>\n            {props.children}\n        </Button>\n    )\n}\n\n\nexport default class GenericForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let childrenMap = [];\n        if (props.children) {\n            if (Array.isArray(props.children)) {\n                childrenMap = props.children;\n            } else {\n                childrenMap = [props.children];\n            }\n        }\n\n        this.state = Object.fromEntries(childrenMap.map(\n            c => [\n                c.props.id,\n                {\n                    error: false,\n                    helperText: \"\"\n                }\n            ]\n        ));\n    }\n\n    validate(props) {\n        let valid = true;\n\n        let childrenMap = [];\n        if (props.children) {\n            if (Array.isArray(props.children)) {\n                childrenMap = props.children;\n            } else {\n                childrenMap = [props.children];\n            }\n        }\n\n        childrenMap.forEach(child => {\n            if (child.props.required && (!child.props.value || child.props.value === '')) {\n                valid = false;\n                this.setState({\n                    [child.props.id]: {\n                        error: true,\n                        helperText: \"Это поле должно быть заполнено\"\n                    }\n                });\n            } else if (child.props.validate && !child.props.validate(child.props.value)) {\n                valid = false;\n                this.setState({\n                    [child.props.id]: {\n                        error: true,\n                        helperText: \"Некорректное значение\"\n                    }\n                });\n            } else {\n                this.setState({\n                    [child.props.id]: {\n                        error: false,\n                        helperText: \"\"\n                    }\n                });\n            }\n        });\n\n        if (valid && props.submit) {\n            props.submit();\n        }\n    }\n\n    render() {\n        return (\n            <Container style={{display: \"flex\", flexDirection: \"column\"}}>\n                {React.Children.map(this.props.children, child => {\n                    return React.cloneElement(child, {\n                        error: this.state[child.props.id].error,\n                        helperText: this.state[child.props.id].helperText,\n                        resetError: () => {\n                            this.setState({\n                                [child.props.id]: {\n                                    error: false,\n                                    helperText: \"\"\n                                }\n                            })\n                        }\n                    })\n                })}\n                <FormButton submit onClick={() => this.validate(this.props)}>\n                    Далее\n                </FormButton>\n                {\n                    this.props.returnBack ? (\n                        <FormButton onClick={this.props.returnBack}>\n                            Назад\n                        </FormButton>\n                    ) : null\n                }\n            </Container>\n        );\n    }\n\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function PhoneField(props) {\n    return (\n        <TextField\n            label={props.label}\n            value={props.value ?? \"\"}\n            onChange={(event) => {\n                props.resetError();\n                props.setValue(event.target.value);\n            }}\n            name={props.name}\n            id={props.id}\n            variant=\"outlined\"\n            required={props.required}\n            className={props.className}\n            error={props.error}\n            helperText={props.helperText ?? \"\"}\n            style={{paddingBottom: 20}}\n        />\n    );\n}","import Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {setEmail, setName, setPhone, submitContacts} from \"../redux/actions/OrderActions\";\nimport PhoneField from \"../components/form/PhoneField\";\nimport GenericForm from \"../components/form/GenericForm\";\nimport BasicField from \"../components/form/BasicField\";\n\nfunction ContactForm(props) {\n\n    function validateEmail(email) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    return (\n        <Container style={{paddingTop: 20, paddingBottom: 20}}>\n            <Typography component=\"h5\" variant=\"h5\" align=\"center\" style={{paddingBottom: 40}}>\n                Оформить заказ\n            </Typography>\n            <GenericForm submit={props.submitContacts}>\n                <BasicField\n                    id=\"name\"\n                    label=\"Имя\"\n                    value={props.order.contacts.name}\n                    setValue={props.setName}\n                    required\n                />\n                <PhoneField\n                    id=\"phone\"\n                    label=\"Телефон\"\n                    value={props.order.contacts.phone}\n                    setValue={props.setPhone}\n                    required\n                />\n                <BasicField\n                    id=\"email\"\n                    label=\"Email\"\n                    value={props.order.contacts.email}\n                    setValue={props.setEmail}\n                    required\n                    validate={(value) => validateEmail(value)}\n                />\n            </GenericForm>\n        </Container>\n    );\n}\n\nconst mapStateToProps = store => {\n    return {\n        order: store.order,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setName: (name) => dispatch(setName(name)),\n        setEmail: (email) => dispatch(setEmail(email)),\n        setPhone: (phone) => dispatch(setPhone(phone)),\n        submitContacts: () => dispatch(submitContacts()),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ContactForm);","import Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport throttle from 'lodash/throttle';\n\nexport default function AddressField(props) {\n\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n\n    const getOptions = React.useMemo(\n        () =>\n            throttle((inputValue, callback) => {\n                fetch(`http://${window.location.hostname}/api/delivery/complete/?address=${inputValue}`)\n                    .then(result => result.json())\n                    .then(callback)\n            }, 500),\n        [],\n    );\n\n    React.useEffect(() => {\n        let active = true;\n\n        console.log(inputValue);\n\n        if (inputValue === '') {\n            setOptions(props.value ? [props.value] : []);\n            return undefined;\n        }\n\n        getOptions(inputValue, (results) => {\n            if (active) {\n                let newOptions = [];\n\n                if (results) {\n                    newOptions = results;\n                }\n\n                setOptions(newOptions);\n            }\n        });\n\n        return () => {\n            active = false;\n        };\n    }, [props.value, inputValue, getOptions]);\n\n\n    return (\n        <Autocomplete\n            id=\"address\"\n            getOptionLabel={(option) => option.address}\n            filterOptions={(x) => x}\n            options={options}\n            noOptionsText=\"Адрес не найден\"\n            autoComplete\n            includeInputInList\n            value={props.value}\n            onChange={(event, newValue) => {\n                setOptions(newValue ? [newValue, ...options] : options);\n                props.resetError();\n                props.setValue(newValue);\n            }}\n            onInputChange={(event, newInputValue) => {\n                setInputValue(newInputValue);\n            }}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label={props.label}\n                    name={props.name}\n                    id={props.id}\n                    variant=\"outlined\"\n                    required={props.required}\n                    className={props.className}\n                    error={props.error}\n                    helperText={props.helperText ?? \"\"}\n                    style={{paddingBottom: 20}}\n                />\n            )}\n        />\n    );\n}","import FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Radio from \"@material-ui/core/Radio\";\n\nfunction OptionCard(props) {\n    if (!props.option) {\n        return null;\n    }\n\n    return (\n        <Card>\n            <FormControlLabel value={props.value} control={<Radio />} label={props.name} />\n            <Typography>Стоимость: {props.option.cost.delivery} рублей </Typography>\n        </Card>\n    )\n}\n\nexport default function DeliveryOptionField(props) {\n    if (!props.options) {\n        return null;\n    }\n\n    return (\n        <FormControl\n            component=\"fieldset\"\n            className={props.className}\n            style={{paddingBottom: 20}}\n        >\n            <RadioGroup\n                aria-label=\"quiz\"\n                name={props.name}\n                value={props.value ?? ''}\n                onChange={(event) => {\n                    props.resetError();\n                    props.setValue(event.target.value);\n                }}\n            >\n                <OptionCard option={props.options['POST']} name=\"Почта\" value=\"POST\" />\n                <OptionCard option={props.options['COURIER']} name=\"Курьер\" value=\"COURIER\" />\n            </RadioGroup>\n            <FormHelperText error>{props.helperText}</FormHelperText>\n        </FormControl>\n    )\n}","import {\n    returnToContacts,\n    setAddress,\n    setDeliverySelected,\n    submitOrder\n} from \"../redux/actions/OrderActions\";\nimport {connect} from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GenericForm from \"../components/form/GenericForm\";\nimport React from \"react\";\nimport AddressField from \"../components/form/AddressField\";\nimport DeliveryOptionField from \"../components/form/DeliveryOptionField\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction DeliveryForm(props) {\n    let history = useHistory();\n\n    function convertItemToData(item) {\n        return {\n            item: item.item.id,\n            quantity: item.quantity,\n        };\n    }\n\n    function submitOrder() {\n        const orderData = {\n            name: props.order.contacts.name,\n            email: props.order.contacts.email,\n            phone: props.order.contacts.phone,\n            address: props.order.address,\n            delivery_option: props.order.delivery.selected,\n            items: Object.values(props.order.cart).map(item => convertItemToData(item))\n        };\n\n        props.submitOrder(orderData, () => history.push('/order'));\n    }\n\n    return (\n        <Container style={{paddingTop: 20, paddingBottom: 20}}>\n            <Typography component=\"h5\" variant=\"h5\" align=\"center\" style={{paddingBottom: 40}}>\n                Данные доставки\n            </Typography>\n            <GenericForm submit={submitOrder} returnBack={props.returnToContacts}>\n                <AddressField\n                    id=\"address\"\n                    label=\"Адрес\"\n                    value={props.order.address}\n                    setValue={props.setAddress}\n                    required\n                />\n                <DeliveryOptionField\n                    id=\"options\"\n                    label=\"Способ доставки\"\n                    value={props.order.delivery.selected}\n                    setValue={props.setDeliverySelected}\n                    options={props.order.delivery.options}\n                    required\n                />\n            </GenericForm>\n        </Container>\n    );\n}\n\nconst mapStateToProps = store => {\n    return {\n        order: store.order,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        returnToContacts: () => dispatch(returnToContacts()),\n        setAddress: (address) => dispatch(setAddress(address)),\n        setDeliverySelected: (selected) => dispatch(setDeliverySelected(selected)),\n        submitOrder: (orderData, redirect) => dispatch(submitOrder(orderData, redirect)),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DeliveryForm);","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport {connect} from \"react-redux\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport CartContent from \"./CartContent\";\nimport ContactForm from \"./ContactForm\";\nimport DeliveryForm from \"./DeliveryForm\";\nimport ItemsLoading from \"../components/ItemsLoading\";\n\nfunction CartDialog(props) {\n    const theme = useTheme();\n    const matches = !useMediaQuery(theme.breakpoints.down('sm'));\n\n    if (props.cartCount === 0) {\n        props.setCartOpen(false);\n        return null;\n    }\n\n    let dialogContent = null;\n\n    if (props.orderStep === 0) {\n        dialogContent = (\n            <Grid container  >\n                <Grid item sm={12} md={6} style={{width: \"100%\"}} >\n                    <ContactForm />\n                </Grid>\n                <Grid item sm={12} md={6} style={{width: \"100%\"}} >\n                    <CartContent />\n                </Grid>\n            </Grid>\n        );\n    } else if (props.orderStep === 1) {\n        dialogContent = (\n            <Grid container  >\n                <Grid item sm={12} md={6} style={{width: \"100%\"}} >\n                    <DeliveryForm />\n                </Grid>\n                <Grid item sm={12} md={6} style={{width: \"100%\"}} >\n                    <CartContent />\n                </Grid>\n            </Grid>\n        );\n    } else {\n        dialogContent = (\n            <ItemsLoading loadingText=\"Создание заказа...\" />\n        );\n    }\n\n    if (!matches) {\n        dialogContent = (\n            <Box display=\"flex\" flexDirection=\"column\">\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <CloseIcon\n                        style={{alignSelf: \"end\", paddingTop: 20, paddingRight: 20}}\n                        fontSize=\"large\"\n                        onClick={() => {\n                            props.setCartOpen(false)\n                        }}\n                    />\n                </Box>\n\n                {dialogContent}\n            </Box>\n        )\n    }\n\n    return (\n        <Dialog\n            onClose={() => {\n                props.setCartOpen(false)\n            }}\n            aria-labelledby=\"Корзина\"\n            open={props.cartOpen}\n            maxWidth=\"md\"\n            fullWidth\n            fullScreen={!matches}\n        >\n            {dialogContent}\n        </Dialog>\n    );\n}\n\nconst mapStateToProps = store => {\n    return {\n        orderStep: store.order.step,\n        cartCount: Object.keys(store.order.cart).length\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CartDialog);\n","import {connect} from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport ItemsLoading from \"../components/ItemsLoading\";\nimport TextBlock from \"../components/TextBlock\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CartItemCard from \"../components/CartItemCard\";\nimport {addItem, loadOrder} from \"../redux/actions/OrderActions\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nfunction Payment(props) {\n    const [loading, setLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        if (props.order.status !== 'WAITING_PAYMENT' || !props.order.payment_token || loading)\n            return;\n\n        const script = document.createElement(\"script\");\n        script.src = \"https://kassa.yandex.ru/checkout-ui/v2.js\";\n        script.async = true;\n        script.onload = () => {\n            const checkout = new window.YandexCheckout({\n                confirmation_token: props.order.payment_token,\n                return_url: window.location.href,\n                embedded_3ds: true,\n                error_callback(error) {\n                    console.log(error);\n                    if (error.error === 'token_expired') {\n                        setLoading(true);\n                        setTimeout(() => props.loadOrder(props.order.id, props.order.token), 2000);\n                    }\n                }\n            });\n\n            checkout.render('payment-form');\n        }\n        document.body.appendChild(script);\n    }, [props.order.payment_token])\n\n    if (props.order.status !== 'WAITING_PAYMENT' || !props.order.payment_token) {\n        return null;\n    }\n\n    return (\n        <Box style={{paddingBottom: 20}}>\n            <Typography variant=\"h5\" component=\"h5\" align=\"center\" paragraph>Оплата</Typography>\n            {loading ?\n                <ItemsLoading variant=\"h6\" loadingText=\"Обработка оплаты...\" /> :\n                <div id=\"payment-form\" style={{minHeight: 400}}></div>\n            }\n        </Box>\n    )\n}\n\nfunction OrderDetails(props) {\n    return (\n        <Box style={{paddingBottom: 20}}>\n            <Typography variant=\"h5\" component=\"h5\" align=\"center\" paragraph>Детали</Typography>\n            <Typography align=\"center\">Имя: {props.order.name}</Typography>\n            <Typography align=\"center\">Телефон: {props.order.phone}</Typography>\n            <Typography align=\"center\">Email: {props.order.email}</Typography>\n            <Typography align=\"center\">Адрес: {props.order.address.address}</Typography>\n        </Box>\n    )\n}\n\nfunction OrderContent(props) {\n    return (\n        <Box style={{paddingBottom: 20}} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n            <Typography variant=\"h5\" component=\"h5\" align=\"center\" paragraph>Товары</Typography>\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" style={{width: 500, maxWidth: \"100%\"}}>\n                {props.order.items.map(item => (\n                    <CartItemCard quantity={item.quantity} item={item.item} key={item.item.id} />\n                ))}\n            </Box>\n        </Box>\n    )\n}\n\nfunction OrderInfo(props) {\n    function stateToText(status) {\n        switch(status) {\n            case 'WAITING_PAYMENT':\n                return 'Ожидание оплаты'\n            case 'PAYED':\n                return 'Оплачен'\n            default:\n                return status\n        }\n    }\n\n    return (\n        <Box>\n            <Typography align=\"center\" paragraph>Статус: {stateToText(props.order.status)}</Typography>\n            <Payment order={props.order} loadOrder={props.loadOrder} />\n            <OrderDetails order={props.order} />\n            <OrderContent order={props.order} />\n        </Box>\n    )\n}\n\nfunction Order(props) {\n    const [error, setError] = React.useState(!props.order.lastOrderId);\n    const [reloaded, setReloaded] = React.useState(false);\n\n    const id = props.order.lastOrderId;\n    const order = props.order.orders[id];\n\n    React.useEffect(() => {\n        if (!error && !id) {\n            setError(true);\n        } else {\n            if (!error) {\n                if (!order) {\n                    setError(true);\n                    console.log(\"Need to load shit\");\n                } else {\n                    if (!reloaded) {\n                        props.loadOrder(id, order.token);\n                        setReloaded(true);\n                    }\n                }\n            }\n        }\n    }, [error, id, props.order.orders]);\n\n    React.useEffect(() => {\n        const interval = setInterval(() => {\n            if (order) {\n                console.log(\"Reloading order\");\n                props.loadOrder(id, order.token);\n            }\n        }, 30000);\n        return () => clearInterval(interval);\n    }, []);\n\n    let content = null;\n\n    if (error) {\n        content = <ItemsLoading error />;\n    } else {\n        let subContent = null;\n\n        if (!(id in props.order.orders)) {\n            subContent = <ItemsLoading />;\n        } else {\n            subContent = <OrderInfo loadOrder={props.loadOrder} order={props.order.orders[id]} />;\n        }\n\n        content = (\n            <React.Fragment>\n                <TextBlock subtitle={\"Заказ №\" + id} />\n                {subContent}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <Container style={{paddingTop: 20}}>\n            {content}\n        </Container>\n    );\n}\n\nconst mapStateToProps = store => {\n    return {\n        order: store.order\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadOrder: (id, token) => dispatch(loadOrder(id, token))\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Order);","import React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport AppMenu from \"../components/AppMenu\";\nimport Shop from \"./Shop\";\nimport Container from \"@material-ui/core/Container\";\nimport CartDialog from \"./CartDialog\";\nimport CartButton from \"./CartButton\";\nimport {connect} from \"react-redux\";\nimport Order from \"./Order\";\n\nfunction App(props) {\n    const [cartOpen, setCartOpen] = React.useState(false);\n\n    let sections = [\n        {\n            title: 'Главная',\n            url: '/',\n            component: <p>Главная</p>\n        },\n        {\n            title: 'Магазин',\n            url: '/shop',\n            component: <Shop />\n        },\n    ];\n\n    if (props.lastOrderId) {\n        sections = [\n            ...sections,\n            {\n                title: 'Мой заказ',\n                url: '/order',\n                component: <Order />\n            }\n        ]\n    }\n\n    return (\n        <BrowserRouter>\n            <AppMenu\n                sections={sections}\n                image={`http://${window.location.hostname}/static/logo.png`}\n                setCartOpen={setCartOpen}\n            />\n            <CartButton setCartOpen={setCartOpen} floating />\n            <CartDialog cartOpen={cartOpen} setCartOpen={setCartOpen} />\n            <Container disableGutters style={{backgroundColor: \"#f6f6f6\"}} >\n                <Switch>\n                    {sections.map(value => (\n                        <Route strict exact path={value.url} key={value.url}>\n                            {value.component}\n                        </Route>\n                    ))}\n                </Switch>\n            </Container>\n        </BrowserRouter>\n  )\n}\n\nconst mapStateToProps = store => {\n    return {\n        lastOrderId: store.order.lastOrderId\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    ORDER_SUBMITTED,\n    RETURN_TO_CONTACTS,\n    SET_ADDRESS,\n    SET_DELIVERY_SELECTED,\n    SET_EMAIL,\n    SET_NAME, SET_OPTIONS,\n    SET_PHONE,\n    SUBMIT_CONTACTS,\n    SUBMIT_ORDER,\n    ADD_ITEM,\n    CLEAR_CART, ORDER_LOADED, REMOVE_ITEM, DELETE_ITEM\n} from \"../actions/OrderActions\";\n\nconst initialState = {\n    cart: {},\n    step: 0, // 0 - Contact, 1 - Address, 2 - Waiting redirect to payment\n    contacts: {\n        name: null,\n        phone: null,\n        email: null,\n    },\n    address: null,\n    delivery: {\n        options: null,\n        selected: null\n    },\n    lastOrderId: null,\n    orders: {},\n};\n\nexport function orderReducer(state = initialState, action) {\n    let id;\n\n    switch (action.type) {\n\n        case ADD_ITEM:\n            id = action.payload.id;\n\n            if (id in state.cart) {\n                return {\n                    ...state,\n                    cart: {\n                        ...state.cart,\n                        [id]: {\n                            item: action.payload,\n                            quantity: state.cart[id].quantity + 1,\n                        }\n                    }\n                };\n            } else {\n                return {\n                    ...state,\n                    step: Object.keys(state.cart).length === 0 ? 0 : state.step,\n                    cart: {\n                        ...state.cart,\n                        [id]: {\n                            item: action.payload,\n                            quantity: 1,\n                        }\n                    }\n                };\n            }\n\n        case REMOVE_ITEM:\n            id = action.payload.id;\n\n            if (id in state.cart) {\n                if (state.cart[id].quantity === 1) {\n                    let newCart = {...state.cart};\n                    delete newCart[id];\n\n                    return {\n                        ...state,\n                        cart: newCart\n                    }\n                } else {\n                    return {\n                        ...state,\n                        cart: {\n                            ...state.cart,\n                            [id]: {\n                                item: action.payload,\n                                quantity: state.cart[id].quantity - 1\n                            }\n                        }\n                    }\n                }\n            }\n\n            return state;\n\n        case DELETE_ITEM:\n            id = action.payload.id;\n\n            if (id in state.cart) {\n                let newCart = {...state.cart};\n                delete newCart[id];\n\n                return {\n                    ...state,\n                    cart: newCart\n                }\n            }\n\n            return state;\n\n        case CLEAR_CART:\n            return {\n                ...state,\n                cart: {}\n            }\n\n        case SET_NAME:\n            return {\n                ...state,\n                contacts: {\n                    ...state.contacts,\n                    name: action.payload\n                }\n            };\n\n        case SET_PHONE:\n            return {\n                ...state,\n                contacts: {\n                    ...state.contacts,\n                    phone: action.payload\n                }\n            };\n\n        case SET_EMAIL:\n            return {\n                ...state,\n                contacts: {\n                    ...state.contacts,\n                    email: action.payload\n                }\n            };\n\n        case SUBMIT_CONTACTS:\n            return {\n                ...state,\n                step: 1,\n            };\n\n        case RETURN_TO_CONTACTS:\n            return {\n                ...state,\n                step: 0,\n            };\n\n        case SET_ADDRESS:\n            return {\n                ...state,\n                address: action.payload,\n            };\n\n        case SET_OPTIONS:\n            return {\n                ...state,\n                delivery: {\n                    ...state.delivery,\n                    options: action.payload,\n                    selected: null,\n                }\n            };\n\n        case SUBMIT_ORDER:\n            return {\n                ...state,\n                step: 2,\n            };\n\n        case SET_DELIVERY_SELECTED:\n            return {\n                ...state,\n                delivery: {\n                    ...state.delivery,\n                    selected: action.payload\n                }\n            };\n\n        case ORDER_SUBMITTED:\n            console.log(action.payload)\n            return {\n                ...state,\n                cart: {},\n                lastOrderId: action.payload.id,\n                orders: {\n                    ...state.orders,\n                    [action.payload.id]: action.payload\n                }\n            };\n\n        case ORDER_LOADED:\n            return {\n                ...state,\n                orders: {\n                    ...state.orders,\n                    [action.payload.id]: action.payload\n                }\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'\nimport { orderReducer } from './OrderReducer'\n\nexport const rootReducer = combineReducers({\n    order: orderReducer,\n})","import {applyMiddleware, createStore} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './reducers';\nimport thunk from \"redux-thunk\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nlet store = createStore(persistedReducer, applyMiddleware(thunk));\nlet persistor = persistStore(store);\n\nexport { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\nimport {Provider} from \"react-redux\";\nimport { store, persistor } from './redux/configureStore';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n              <App />\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}